# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/tests.yml                         |
# | ROLE: Project YAML manifest.                                |
# | PLIK: .github/workflows/tests.yml                         |
# | ROLA: Manifest YAML projektu.                               |
# +-------------------------------------------------------------+

# +======================================================================+
# |                               CERTEUS                                |
# +======================================================================+
# | FILE / PLIK: .github/workflows/tests.yml                             |
# | ROLA / ROLE:                                                          |
# |  PL: Lint (Ruff) + Format (check) + Pytest (+ JUnit artefakt)        |
# |  EN: Ruff lint + format (check) + Pytest (+ JUnit artifact)          |
# +======================================================================+

name: Tests

on:
  push:
    branches: [main, master, work/daily]
  pull_request:
    branches: [main, master, work/daily]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  UV_LINK_MODE: copy # stabilniej na CI
  PYTEST_JUNIT_XML: reports/junit.xml
  CI_TUNNEL_LOG_SUFFIX: "${{ github.run_id }}-${{ github.run_attempt }}"

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v4

      - name: üêç Set up Python ${{ env.PYTHON_VERSION }} (with pip cache)
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            pyproject.toml
            constraints/**

      - name: üì¶ Cache uv wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: üì¶ Install uv
        run: |
          python -m pip install -U pip uv
          uv --version

      - name: üîß Sync dependencies (uv or pip fallback)
        run: |
          # Prefer uv; if it fails (np. chwilowy b≈ÇƒÖd indeksu) ‚Äì fallback do pip
          uv sync --dev --all-extras || python -m pip install -e ".[dev]"

      - name: üì¶ Ensure dev deps (pip safety net)
        run: |
          python -m pip install -e ".[dev]"

      - name: üß¨ Generate OpenAPI spec (FastAPI import)
        run: |
          mkdir -p reports
          uv run python - << 'PY'
          import json, os
          from services.api_gateway.main import app
          spec = app.openapi()
          os.makedirs('reports', exist_ok=True)
          with open('reports/openapi.json','w', encoding='utf-8') as f:
            json.dump(spec, f, ensure_ascii=False, indent=2)
          print('Wrote reports/openapi.json')
          PY

      - name: üî≠ Spectral (non-blocking)
        continue-on-error: true
        run: |
          npx -y @stoplight/spectral-cli lint reports/openapi.json -f json -o reports/spectral.json || true

      - name: üîé Ruff (lint)
        run: |
          uv run ruff check . --output-format=github

      - name: üé® Ruff (format --check)
        run: |
          uv run ruff format --check

      - name: Install test deps (uv env)
        run: |
          # Install into the uv-managed environment
          uv pip install pytest>=8 pytest-asyncio openapi-spec-validator PyYAML pytest-cov

      - name: üß™ Pytest (JUnit report)
        run: |
          mkdir -p "$(dirname "$PYTEST_JUNIT_XML")"
          python -m pytest -q --junitxml="$PYTEST_JUNIT_XML"

      - name: üì§ Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ github.sha }}
          path: ${{ env.PYTEST_JUNIT_XML }}
          if-no-files-found: ignore
