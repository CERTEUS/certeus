# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/promote-daily-to-main.yml          |
# | ROLE: Auto-promote work/daily to main (gated by CI)         |
# | PLIK: .github/workflows/promote-daily-to-main.yml          |
# | ROLA: Auto-promocja work/daily â†’ main (po zielonym CI)      |
# +-------------------------------------------------------------+

name: Promote-Daily-To-Main

on:
  workflow_run:
    workflows:
      - ci-gates
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  promote:
    if: ${{ github.event.workflow_run.head_branch == 'work/daily' && github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Determine if weekly promotion is requested
        id: marker
        env:
          SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          set -euo pipefail
          # Read commit message for head SHA
          MSG=$(git show -s --format=%B "$SHA")
          echo "Commit message for $SHA:"; echo "$MSG"
          # Weekly promotion marker policy:
          # - Include "[week-end]" anywhere in the message, OR
          # - Include a trailer line like: weekly-promote: true
          if echo "$MSG" | grep -Eqi '\[week-end\]|^weekly-promote:\s*(true|1)'; then
            echo "promote=true" >> $GITHUB_OUTPUT
          else
            echo "promote=false" >> $GITHUB_OUTPUT
          fi
      # ci-gates has succeeded by workflow_run condition; no bot commits.
      - name: Fast-forward main to work/daily (if possible)
        if: steps.marker.outputs.promote == 'true'
        id: ff
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git fetch origin
          # Ensure branches are up-to-date
          git checkout main
          git reset --hard origin/main
          git merge --ff-only origin/work/daily && {
            echo "ff=true" >> $GITHUB_OUTPUT
            git push origin main
            exit 0
          } || echo "No fast-forward possible; skipping (PR path disabled)."
          echo "ff=false" >> $GITHUB_OUTPUT


