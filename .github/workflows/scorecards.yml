# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/scorecards.yml                     |
# | ROLE: OpenSSF Scorecard with threshold gate and SARIF      |
# +-------------------------------------------------------------+

name: scorecards

on:
  branch_protection_rule:
  schedule:
    - cron: "0 2 * * 1"
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write
  id-token: write
  actions: read

jobs:
  analysis:
    name: OpenSSF Scorecard
    runs-on: ubuntu-latest
    continue-on-error: true
    # Skip push events on non-default branches to avoid Scorecard limitations
    if: ${{ github.event_name != 'push' || github.ref == 'refs/heads/main' }}
    permissions:
      contents: read
      security-events: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Run Scorecard (SARIF for Security tab)
        id: scorecard_sarif
        uses: ossf/scorecard-action@05b42c624433fc40578a4040d5cf5e36ddca8cde # v2.4.2
        with:
          results_file: scorecard.sarif
          results_format: sarif
          publish_results: ${{ github.event_name != 'pull_request' }}

      - name: Upload SARIF
        if: ${{ steps.scorecard_sarif.outcome == 'success' }}
        uses: github/codeql-action/upload-sarif@34d76e91962e8cb2510669cd96bebd94e796a11f # v3
        with:
          sarif_file: scorecard.sarif

      - name: Run Scorecard (JSON for gating)
        id: scorecard_json
        uses: ossf/scorecard-action@ff5dd8929f96a8a4dc67d13f32b8c75057829621 # v2.4.0
        with:
          results_file: scorecard.json
          results_format: json
          publish_results: false

      - name: Enforce minimum Scorecard score (informational)
        if: ${{ steps.scorecard_json.outcome == 'success' }}
        shell: bash
        run: |
          set +e
          if ! command -v jq >/dev/null 2>&1; then sudo apt-get update -y && sudo apt-get install -y jq; fi
          SCORE=$(jq -r '.score // .Score // 0' scorecard.json)
          echo "Scorecard aggregate score: ${SCORE}"
          if awk -v s="$SCORE" 'BEGIN { exit (s>=7.5)?0:1 }'; then
            echo "Score threshold satisfied"
          else
            echo "WARNING: Score threshold not met; proceeding (non-blocking)"
          fi
