name: Smoke

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

concurrency:
  group: smoke-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  SLO_MAX_P95_MS: "250"

jobs:
  smoke:
    name: Smoke
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: 🔄 Checkout
        uses: actions/checkout@v4

      - name: 🐍 Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Create venv and install (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m venv .venv
          ./.venv/bin/python -m pip install -U pip wheel setuptools ruff pytest jsonschema cryptography fastapi uvicorn -c constraints/requirements-constraints.txt

      - name: 📦 Create venv and install (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          py -3 -m venv .venv
          .\.venv\Scripts\python.exe -m pip install -U pip wheel setuptools ruff pytest jsonschema cryptography fastapi uvicorn -c constraints/requirements-constraints.txt

      - name: 🚬 Run smoke (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          bash ./scripts/smoke_api.sh

      - name: 🚬 Run smoke (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          pwsh -File .\scripts\smoke_api.ps1

      - name: 📤 Upload smoke summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-summary-${{ matrix.os }}-${{ github.sha }}
          path: reports/smoke_summary.json
          if-no-files-found: warn
