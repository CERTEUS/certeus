# LEXLOG — Jzyk Prawdy v0.1

# LEXLOG — Jzyk Prawdy v0.1

+-------------------------------------------------------------+
|              CERTEUS - JÄ™zyk LEXLOG v0.1                    |
+-------------------------------------------------------------+
| PLIK: LEXLOG.md                                             |
| ROLA/ROLE: Specyfikacja jÄ™zyka dziedzinowego (DSL) do       |
|            formalizacji reguĹ‚ i faktĂłw prawnych.            |
+-------------------------------------------------------------+

# LEXLOG â€” A Language for Formalizing Legal Logic

## 1. Wprowadzenie / Introduction

PL: **LEXLOG** to precyzyjny, deklaratywny jÄ™zyk do opisu logiki prawnej w sposĂłb zrozumiaĹ‚y dla solverĂłw SMT. Celem jest eliminacja niejednoznacznoĹ›ci i zapewnienie weryfikowalnoĹ›ci rozumowania.
EN: **LEXLOG** is a precise, declarative language to describe legal logic in a machine-understandable way for SMT solvers. The goal is to eliminate ambiguity and ensure verifiable reasoning.

## 2. Podstawowe Konstrukcje (v0.1) / Basic Constructs (v0.1)

### Definicja (DEFINE)
PL: Definiuje staĹ‚e/zmienne logiczne reprezentujÄ…ce kluczowe pojÄ™cia.
EN: Defines logical constants/variables representing key concepts.

```lexlog
DEFINE czyn_ma_charakter_oszukanczy: Bool
DEFINE kwota_szkody: Real
```

### PrzesĹ‚anka (PREMISE)
PL: Warunek, ktĂłry musi byÄ‡ speĹ‚niony. MoĹĽe odwoĹ‚ywaÄ‡ siÄ™ do faktĂłw z FACTLOG.
EN: A condition that must be met. May refer to facts from FACTLOG.

```lexlog
PREMISE P1: "Wprowadzenie w bĹ‚Ä…d"
    EXISTS (fact: FACTLOG WHERE role = 'introduction_into_error')
```

### ReguĹ‚a (RULE)
PL: ĹÄ…czy przesĹ‚anki w implikacjÄ™ prowadzÄ…cÄ… do konkluzji.
EN: Combines premises into an implication leading to a conclusion.

```lexlog
RULE R_OSZUSTWO (P1, P2, P3) -> K1
```

### Konkluzja (CONCLUSION)
PL: Logiczny wniosek wynikajÄ…cy z reguĹ‚y.
EN: Logical conclusion resulting from a rule.

```lexlog
CONCLUSION K1: "Czyn wypeĹ‚nia znamiona oszustwa z art. 286 k.k."
    ASSERT (czyn_ma_charakter_oszukanczy == True)
```

## 3. PrzykĹ‚ad dla Art. 286 k.k. (MVP) / Example for Art. 286 (MVP)

```lexlog
# --- Definicje dla Art. 286 k.k. ---
DEFINE cel_korzysci_majatkowej: Bool
DEFINE wprowadzenie_w_blad: Bool
DEFINE niekorzystne_rozporzadzenie_mieniem: Bool

# --- PrzesĹ‚anki ---
PREMISE P_CEL: "Sprawca dziaĹ‚aĹ‚ w celu osiÄ…gniÄ™cia korzyĹ›ci majÄ…tkowej"
    EXISTS (fact: FACTLOG WHERE role = 'intent_financial_gain')

PREMISE P_WPROWADZENIE: "Sprawca wprowadziĹ‚ ofiarÄ™ w bĹ‚Ä…d"
    EXISTS (fact: FACTLOG WHERE role = 'act_deception')

PREMISE P_ROZPORZADZENIE: "NastÄ…piĹ‚o niekorzystne rozporzÄ…dzenie mieniem"
    EXISTS (fact: FACTLOG WHERE role = 'detrimental_property_disposal')

# --- GĹ‚Ăłwna reguĹ‚a ---
RULE R_286_OSZUSTWO (P_CEL, P_WPROWADZENIE, P_ROZPORZADZENIE) -> K_OSZUSTWO_STWIERDZONE

# --- Konkluzja ---
CONCLUSION K_OSZUSTWO_STWIERDZONE: "Czyn wypeĹ‚nia znamiona z art. 286 k.k."
    ASSERT (cel_korzysci_majatkowej AND wprowadzenie_w_blad AND niekorzystne_rozporzadzenie_mieniem)
```

## 4. Konwencje / Conventions

- ID przesĹ‚anek: `P_*`, konkluzje: `K_*`.
- Aliasowanie do silnikĂłw (MAPS_TO) jest opcjonalne w DSL â€” twarde mapowanie trzymamy w JSON `kk.mapping.json`.
- DwujÄ™zyczne komentarze i nagĹ‚Ăłwki ASCII zgodnie z â€žStandard Kodowania â€“ Premium Code Styleâ€ť (README).



