# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/ci-gates.yml                      |
# | ROLE: Project YAML manifest.                                |
# | PLIK: .github/workflows/ci-gates.yml                      |
# | ROLA: Manifest YAML projektu.                               |
# +-------------------------------------------------------------+

name: ci-gates

on:
  push:
  pull_request:

jobs:
  gates:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install tools
        run: |
          python -m pip install -U pip wheel setuptools
          # Install project runtime deps
          python -m pip install -e .
          # Install test/dev helpers explicitly used by the suite
          python -m pip install ruff pytest pytest-asyncio httpx z3-solver

      - name: Load CI defaults (non-secrets)
        run: |
          python scripts/ci/load_env_defaults.py
      - name: Decorator split scan (report-only)
        run: |
          python scripts/fix_decorator_split.py --check || true
      - name: Premium Style Gate (sec.21)
        run: |
          python scripts/check_premium_style.py
      - name: Ruff Lint (no fix)
        run: |
          python -m ruff check .
      - name: Tests
        env:
          PYTEST_ADDOPTS: "-k 'not test_generate_proofs_cli_smoke_test'"
        run: |
          python -m pytest -q

      - name: Perf Smoke (W11)
        run: |
          python scripts/perf/quick_bench.py --iters 5 --p95-max-ms 250

      - name: SLO Smoke (in-proc)
        env:
          SLO_MAX_P95_MS: "300"
          SLO_MAX_ERROR_RATE: "0.01"
        run: |
          python scripts/slo_gate/measure_api.py
          python scripts/slo_gate/check_slo.py

      - name: Governance consistency (smoke)
        run: |
          python scripts/validate_governance_consistency.py

      - name: Metrics smoke (/metrics)
        run: |
          python scripts/smokes/metrics_smoke.py

      - name: Publish CI status to branch
        if: always()
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
          attempt=0
          max_attempts=5
          until [ $attempt -ge $max_attempts ]; do
            attempt=$((attempt+1))
            echo "[ci-status] Attempt $attempt/$max_attempts"
            # Always refetch latest remote tip
            git fetch origin ci-status || true
            if git rev-parse --verify origin/ci-status >/dev/null 2>&1; then
              git checkout -B ci-status origin/ci-status
            else
              git checkout --orphan ci-status
              git rm -rf . || true
            fi
            mkdir -p ci
            ts="$(date -u +%FT%TZ)"
            printf '%s\n' '{' \
              "  \"repo\": \"${{ github.repository }}\"," \
              "  \"workflow\": \"${{ github.workflow }}\"," \
              "  \"run_id\": \"${{ github.run_id }}\"," \
              "  \"run_number\": \"${{ github.run_number }}\"," \
              "  \"event\": \"${{ github.event_name }}\"," \
              "  \"branch\": \"${{ github.ref_name }}\"," \
              "  \"sha\": \"${{ github.sha }}\"," \
              "  \"status\": \"${{ job.status }}\"," \
              "  \"updated_at\": \"${ts}\"" \
            '}' > ci/status.json
            git add ci/status.json
            git commit -m "ci: update status to ${{ job.status }} for ${{ github.sha }}" || echo "No changes"
            if git push origin ci-status; then
              echo "[ci-status] Push OK"
              break
            else
              echo "[ci-status] Push failed (likely race). Retrying..."
              sleep 2
            fi
          done
          if [ $attempt -ge $max_attempts ]; then
            echo "[ci-status] Failed to push after $max_attempts attempts"
            exit 1
          fi
