# +=====================================================================+
# |                              CERTEUS                                |
# +=====================================================================+
# | FILE:   .github/workflows/security-scan.yml                         |
# | ROLE:   Security scans (CodeQL + deps SBOM)                         |
# | DATE:   2025-08-17                                                  |
# +=====================================================================+

name: security-scan

on:
  schedule:
    - cron: "0 3 * * 1"
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  codeql:
    name: CodeQL (Python)
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Init CodeQL (Python)
        uses: github/codeql-action/init@34d76e91962e8cb2510669cd96bebd94e796a11f # v3
        with:
          languages: python
      - name: Autobuild (no-op for Python)
        uses: github/codeql-action/autobuild@34d76e91962e8cb2510669cd96bebd94e796a11f # v3
      - name: Analyze
        uses: github/codeql-action/analyze@34d76e91962e8cb2510669cd96bebd94e796a11f # v3

  deps-sbom:
    name: Dependencies SBOM
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: astral-sh/setup-uv@8d55fbecc275b1c35dbe060458839f8d30439ccf # v3
      - name: Sync deps
        run: uv sync
      - name: CycloneDX SBOM (JSON)
        run: |
          uv add cyclonedx-bom
          uv run cyclonedx-py environment --format json --output sbom.json
      - name: Upload SBOM
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: sbom-cyclonedx-json
          path: sbom.json

  trivy-fs:
    name: Trivy FS scan (deny-by-default)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    continue-on-error: true
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: FS scan (Trivy)
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "sarif"
          output: "trivy-fs.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "0"
      - name: Upload Trivy report
        if: always()
        uses: github/codeql-action/upload-sarif@34d76e91962e8cb2510669cd96bebd94e796a11f # v3
        with:
          sarif_file: trivy-fs.sarif

  bandit:
    name: Bandit (informational)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.11"
      - name: Install bandit
        run: python -m pip install bandit
      - name: Run bandit (non-blocking)
        run: |
          bandit -q -r . -x .venv,venv,clients/web,clients/cli,dist,build || true

  gitleaks:
    name: Gitleaks (informational)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Run gitleaks
        uses: zricethezav/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7 # v2.3.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: detect --verbose --redact --no-banner --exit-code 0 -c .gitleaks.toml

  python-vulns:
    name: Python vuln scans (pip-audit + safety)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.11"
      - name: pip-audit (SARIF)
        run: |
          python -m pip install pip-audit
          pip-audit -f sarif -o pip-audit.sarif || true
          # Ensure SARIF exists to avoid upload failure
          if [ ! -s pip-audit.sarif ]; then
            echo '{"version":"2.1.0","$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","runs":[]}' > pip-audit.sarif
          fi
      - name: Upload pip-audit SARIF
        if: always()
        run: |
          # Only upload SARIF if it contains actual results
          if [ -s pip-audit.sarif ] && [ "$(jq '.runs[0].results | length' pip-audit.sarif 2>/dev/null || echo 0)" -gt 0 ]; then
            echo "SARIF contains results, uploading..."
            gh api --method POST \
              repos/CERTEUS/certeus/code-scanning/sarifs \
              -f sarif="$(cat pip-audit.sarif | base64 -w 0)" \
              -f ref=refs/heads/main \
              -f commit_sha="${GITHUB_SHA}"
          else
            echo "SARIF is empty or contains no results, skipping upload"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: safety (JSON informational)
        run: |
          python -m pip install safety
          safety check -r requirements.txt -f json -o safety.json || true
      - name: Upload safety report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: safety-report
          path: safety.json

  node-vulns:
    name: Node/TS vuln scans (npm audit + OSV)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: npm audit (informational SARIF via OSV)
        shell: bash
        run: |
          if [ -f package.json ]; then
            npm ci --ignore-scripts || true
            npm audit --json > npm-audit.json || true
          fi
      - name: OSV-Scanner (SARIF)
        continue-on-error: true
        shell: bash
        run: |
          set -e
          curl -sSL -o osv-scanner https://github.com/google/osv-scanner/releases/download/v1.8.5/osv-scanner_1.8.5_linux_amd64
          chmod +x osv-scanner
          ./osv-scanner --format sarif -o osv-node.sarif . || true
          # Ensure SARIF exists to avoid upload failure
          if [ ! -s osv-node.sarif ]; then
            echo '{"version":"2.1.0","$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","runs":[]}' > osv-node.sarif
          fi
      - name: Upload OSV SARIF
        if: always()
        run: |
          # Only upload SARIF if it contains actual results
          if [ -s osv-node.sarif ] && [ "$(jq '.runs[0].results | length' osv-node.sarif 2>/dev/null || echo 0)" -gt 0 ]; then
            echo "SARIF contains results, uploading..."
            gh api --method POST \
              repos/CERTEUS/certeus/code-scanning/sarifs \
              -f sarif="$(cat osv-node.sarif | base64 -w 0)" \
              -f ref=refs/heads/main \
              -f commit_sha="${GITHUB_SHA}"
          else
            echo "SARIF is empty or contains no results, skipping upload"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
