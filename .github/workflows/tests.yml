# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/tests.yml                         |
# | ROLE: Project YAML manifest.                                |
# | PLIK: .github/workflows/tests.yml                         |
# | ROLA: Manifest YAML projektu.                               |
# +-------------------------------------------------------------+

# +======================================================================+
# |                               CERTEUS                                |
# +======================================================================+
# | FILE / PLIK: .github/workflows/tests.yml                             |
# | ROLA / ROLE:                                                          |
# |  PL: Lint (Ruff) + Format (check) + Pytest (+ JUnit artefakt)        |
# |  EN: Ruff lint + format (check) + Pytest (+ JUnit artifact)          |
# +======================================================================+

name: Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  UV_LINK_MODE: copy # stabilniej na CI
  PYTEST_JUNIT_XML: reports/junit.xml

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }} (with pip cache)
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            pyproject.toml
            constraints/**

      - name: 📦 Cache uv wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: 📦 Install uv
        run: |
          python -m pip install -U pip uv
          uv --version

      - name: 🔧 Sync dependencies (uv or pip fallback)
        run: |
          # Prefer uv; if it fails (np. chwilowy błąd indeksu) – fallback do pip
          uv sync || python -m pip install -e ".[dev]"

      - name: 🔎 Ruff (lint)
        run: |
          uv run ruff check . --output-format=github

      - name: 🎨 Ruff (format --check)
        run: |
          uv run ruff format --check

      - name: Install test deps (uv env)
        run: |
          # Install into the uv-managed environment
          uv pip install pytest>=8 pytest-asyncio openapi-spec-validator PyYAML

      - name: 🧪 Pytest (JUnit report)
        run: |
          python -m pip install -U pytest pytest-asyncio
          mkdir -p "$(dirname "$PYTEST_JUNIT_XML")"
          python -m pytest -q --junitxml="$PYTEST_JUNIT_XML"

      - name: 📤 Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ github.sha }}
          path: ${{ env.PYTEST_JUNIT_XML }}
          if-no-files-found: ignore
