# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/publish_public_mirror.yml          |
# | ROLE: Publish sanitized mirror to CERTEUS/certeus-public   |
# +-------------------------------------------------------------+

name: Publish-Public-Mirror

on:
  workflow_run:
    workflows: [Promote-Daily-To-Main]
    types: [completed]
  workflow_dispatch:
    inputs:
      force:
        description: "Force publish even if MIRROR_PUBLISH != enabled"
        required: false
        default: "false"
      reason:
        description: "Why forcing (note in logs)"
        required: false
        default: ""

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Guard â€“ should we publish?
        id: guard
        run: |
          echo "MIRROR_PUBLISH=${{ vars.MIRROR_PUBLISH }}"
          echo "event=${{ github.event_name }} force=${{ github.event.inputs.force || 'false' }} reason=${{ github.event.inputs.reason || '' }}"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.force }}" = "true" ]; then
            echo "ok=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          if [ "${{ vars.MIRROR_PUBLISH }}" = "enabled" ]; then
            echo "ok=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "::notice::Publish disabled (set MIRROR_PUBLISH=enabled or run with force=true)."
          echo "ok=false" >> $GITHUB_OUTPUT
          exit 0
      - name: Checkout repo
        if: steps.guard.outputs.ok == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Secret scan (gitleaks)
        if: steps.guard.outputs.ok == 'true'
        uses: zricethezav/gitleaks-action@v2.3.7
        with:
          args: detect --redact --no-banner --exit-code 1
      - name: Install git-filter-repo
        if: steps.guard.outputs.ok == 'true'
        run: |
          python -m pip install git-filter-repo
      - name: Filter repository to allowlist
        if: steps.guard.outputs.ok == 'true'
        run: |
          rm -rf mirror && git clone --mirror . mirror
          cd mirror
          mapfile -t PATHS < <(grep -vE '^(#|\s*$)' ../tools/automation/public_allowlist.txt)
          ARGS=()
          for p in "${PATHS[@]}"; do
            ARGS+=("--path" "$p")
          done
          git filter-repo "${ARGS[@]}"
          git for-each-ref --format='delete %(refname)' refs/original/ | git update-ref --stdin || true
          git repack -Ad && git prune --expire=now || true
      - name: Push to public repo (force)
        if: steps.guard.outputs.ok == 'true'
        env:
          PUBLIC_MIRROR_PAT: ${{ secrets.PUBLIC_MIRROR_PAT }}
        run: |
          cd mirror
          git remote remove origin || true
          git remote add origin https://x-access-token:${PUBLIC_MIRROR_PAT}@github.com/CERTEUS/certeus-public.git
          git push -f origin main
