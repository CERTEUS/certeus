# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/branch-protection.yml             |
# | ROLE: Project YAML manifest.                                |
# | PLIK: .github/workflows/branch-protection.yml             |
# | ROLA: Manifest YAML projektu.                               |
# +-------------------------------------------------------------+

name: Enforce Branch Protection (Smoke Required)

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to protect
        default: main
        required: true

permissions:
  contents: read

jobs:
  protect:
    runs-on: ubuntu-latest
    steps:
      - name: Check ADMIN_TOKEN availability
        id: check
        run: |
          if [ -n "${{ secrets.ADMIN_TOKEN }}" ]; then
            echo "has_token=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_token=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Set required status checks for Smoke (per OS)
        if: steps.check.outputs.has_token == 'true'
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          owner='${{ github.repository_owner }}'
          repo_name='${{ github.event.repository.name || github.repository }}'
          # Determine branch: input if manual, else current ref name
          if [ -n "${{ inputs.branch }}" ]; then branch='${{ inputs.branch }}'; else branch='${{ github.ref_name }}'; fi
          contexts='["Smoke (ubuntu-latest)","Smoke (windows-latest)"]'
          gh api -X PUT repos/$owner/$repo_name/branches/$branch/protection \
            -H 'Accept: application/vnd.github+json' \
            -f required_status_checks.strict=true \
            -f required_status_checks.contexts:=$contexts \
            -f enforce_admins=true \
            -f required_pull_request_reviews.dismiss_stale_reviews=true \
            -f required_pull_request_reviews.required_approving_review_count=1 \
            -f restrictions= \
            -F allow_force_pushes=false \
            -F allow_deletions=false
      - name: Skip note (no ADMIN_TOKEN)
        if: steps.check.outputs.has_token != 'true'
        run: |
          echo "ADMIN_TOKEN not set; skipping branch protection update (safe no-op)."
