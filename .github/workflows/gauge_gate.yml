# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/gauge_gate.yml                     |
# | ROLE: Project YAML manifest.                                |
# | PLIK: .github/workflows/gauge_gate.yml                     |
# | ROLA: Manifest YAML projektu.                               |
# +-------------------------------------------------------------+

name: Gauge-Gate

on: [push, pull_request]

jobs:
  gauge-gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install tooling
        run: |
          python -m pip install -U pip wheel setuptools
      - name: Run holonomy checks
        run: |
          # Oblicz metryki (stub) i oceń bramkę; jeśli brak wejścia, gate oblicza wartości samodzielnie
          python scripts/gates/compute_gauge_drift.py --out out/gauge.json || true
          python scripts/gates/gauge_gate.py --epsilon 1e-3 --input out/gauge.json

  pr-summary:
    if: github.event_name == 'pull_request' && always()
    needs: [gauge-gate]
    runs-on: ubuntu-latest
    steps:
      - name: Comment PR with Gauge-Gate result
        uses: actions/github-script@v7
        with:
          script: |
            const result = '${{ needs["gauge-gate"].result }}';
            const body = `✔ Gauge-Gate: ${result}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body,
            });
