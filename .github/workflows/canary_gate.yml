# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/canary_gate.yml                   |
# | ROLE: Canary/progressive readiness (PR-only)                |
# +-------------------------------------------------------------+

name: Canary‑Gate

on:
  pull_request:
    branches: [ main, work/daily ]

permissions:
  contents: read
  pull-requests: write

jobs:
  canary:
    name: Canary‑Gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            pyproject.toml
            constraints/**
      - name: Install deps (minimal)
        run: |
          python -m pip install -U pip wheel setuptools
          python -m pip install fastapi httpx uvicorn cryptography jsonschema prometheus-client openapi-spec-validator python-multipart z3-solver
      - name: Run Canary Gate
        env:
          CANARY_COUNT: '40'
          CANARY_MAX_P95_MS: '350'
          CANARY_MAX_ERROR_RATE: '0.05'
        run: |
          python scripts/gates/canary_gate.py --phases 3 --count "$CANARY_COUNT" --p95-max "$CANARY_MAX_P95_MS" --error-rate-max "$CANARY_MAX_ERROR_RATE" --out out/canary.json
      - name: Upload canary report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: canary-${{ github.sha }}
          path: out/canary.json
          if-no-files-found: warn
      - name: Comment PR with Canary p95 summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let body = '### Canary Gate Summary\n\n';
            try {
              const data = JSON.parse(fs.readFileSync('out/canary.json','utf8'));
              const rows = Array.isArray(data.results) ? data.results : [];
              if (rows.length) {
                body += '| phase% | count | p95_ms | error_rate | ok |\n|---:|---:|---:|---:|:---:|\n';
                for (const r of rows) {
                  const p95 = (typeof r.p95_ms==='number') ? r.p95_ms.toFixed(2) : r.p95_ms;
                  body += `| ${r.phase_pct} | ${r.count} | ${p95} | ${r.error_rate} | ${r.ok ? '✅' : '❌'} |\n`;
                }
              } else {
                body += 'No results found in out/canary.json';
              }
            } catch (e) {
              body += 'Could not parse out/canary.json';
            }
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            } catch (e) {
              core.warning('Could not create PR comment: ' + (e?.message || e));
            }

