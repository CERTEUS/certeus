# +-------------------------------------------------------------+
# |                          CERTEUS                            |
# +-------------------------------------------------------------+
# | FILE: .github/workflows/release-pipeline.yml                |
# | ROLE: Build & publish images, SBOM, provenance, signatures  |
# +-------------------------------------------------------------+

name: Release-Pipeline

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: Version tag (e.g., v1.2.3)
        required: true

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build & Push (GHCR)
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=tag
            type=raw,value=${{ inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate SBOM (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          artifact-name: sbom-${{ github.sha }}
          path: .
          format: cyclonedx-json
      - name: Upload image digest
        run: echo ${{ steps.meta.outputs.digest }} > image-digest.txt
      - uses: actions/upload-artifact@v4
        with:
          name: image-digest-${{ github.sha }}
          path: image-digest.txt

  sign:
    name: Sign (cosign keyless)
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: sigstore/cosign-installer@v3
      - name: Cosign sign (keyless)
        env:
          COSIGN_EXPERIMENTAL: '1'
        run: |
          echo "Signing image tags from metadata not implemented; placeholder" 
        continue-on-error: true

  provenance:
    name: SLSA Provenance
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Generate provenance (placeholder)
        run: echo "Provenance generation to be wired with SLSA generator" 
        continue-on-error: true

  release:
    name: Release
    needs: [build, sign, provenance]
    runs-on: ubuntu-latest
    environment: production
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

